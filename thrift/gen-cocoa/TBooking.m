/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"


#import "TBooking.h"

@implementation SuppliesOrder

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithSupplyId: (int32_t) supplyId quantity: (int32_t) quantity price: (double) price
{
  self = [super init];
  __supplyId = supplyId;
  __supplyId_isset = YES;
  __quantity = quantity;
  __quantity_isset = YES;
  __price = price;
  __price_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"supplyId"])
  {
    __supplyId = [decoder decodeInt32ForKey: @"supplyId"];
    __supplyId_isset = YES;
  }
  if ([decoder containsValueForKey: @"quantity"])
  {
    __quantity = [decoder decodeInt32ForKey: @"quantity"];
    __quantity_isset = YES;
  }
  if ([decoder containsValueForKey: @"price"])
  {
    __price = [decoder decodeDoubleForKey: @"price"];
    __price_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__supplyId_isset)
  {
    [encoder encodeInt32: __supplyId forKey: @"supplyId"];
  }
  if (__quantity_isset)
  {
    [encoder encodeInt32: __quantity forKey: @"quantity"];
  }
  if (__price_isset)
  {
    [encoder encodeDouble: __price forKey: @"price"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int32_t) supplyId {
  return __supplyId;
}

- (void) setSupplyId: (int32_t) supplyId {
  __supplyId = supplyId;
  __supplyId_isset = YES;
}

- (BOOL) supplyIdIsSet {
  return __supplyId_isset;
}

- (void) unsetSupplyId {
  __supplyId_isset = NO;
}

- (int32_t) quantity {
  return __quantity;
}

- (void) setQuantity: (int32_t) quantity {
  __quantity = quantity;
  __quantity_isset = YES;
}

- (BOOL) quantityIsSet {
  return __quantity_isset;
}

- (void) unsetQuantity {
  __quantity_isset = NO;
}

- (double) price {
  return __price;
}

- (void) setPrice: (double) price {
  __price = price;
  __price_isset = YES;
}

- (BOOL) priceIsSet {
  return __price_isset;
}

- (void) unsetPrice {
  __price_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setSupplyId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setQuantity: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setPrice: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"SuppliesOrder"];
  if (__supplyId_isset) {
    [outProtocol writeFieldBeginWithName: @"supplyId" type: TType_I32 fieldID: 1];
    [outProtocol writeI32: __supplyId];
    [outProtocol writeFieldEnd];
  }
  if (__quantity_isset) {
    [outProtocol writeFieldBeginWithName: @"quantity" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __quantity];
    [outProtocol writeFieldEnd];
  }
  if (__price_isset) {
    [outProtocol writeFieldBeginWithName: @"price" type: TType_DOUBLE fieldID: 3];
    [outProtocol writeDouble: __price];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"SuppliesOrder("];
  [ms appendString: @"supplyId:"];
  [ms appendFormat: @"%i", __supplyId];
  [ms appendString: @",quantity:"];
  [ms appendFormat: @"%i", __quantity];
  [ms appendString: @",price:"];
  [ms appendFormat: @"%f", __price];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation RefundCouponConsumption

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithRefundCouponId: (int64_t) refundCouponId value: (double) value
{
  self = [super init];
  __refundCouponId = refundCouponId;
  __refundCouponId_isset = YES;
  __value = value;
  __value_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"refundCouponId"])
  {
    __refundCouponId = [decoder decodeInt64ForKey: @"refundCouponId"];
    __refundCouponId_isset = YES;
  }
  if ([decoder containsValueForKey: @"value"])
  {
    __value = [decoder decodeDoubleForKey: @"value"];
    __value_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__refundCouponId_isset)
  {
    [encoder encodeInt64: __refundCouponId forKey: @"refundCouponId"];
  }
  if (__value_isset)
  {
    [encoder encodeDouble: __value forKey: @"value"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int64_t) refundCouponId {
  return __refundCouponId;
}

- (void) setRefundCouponId: (int64_t) refundCouponId {
  __refundCouponId = refundCouponId;
  __refundCouponId_isset = YES;
}

- (BOOL) refundCouponIdIsSet {
  return __refundCouponId_isset;
}

- (void) unsetRefundCouponId {
  __refundCouponId_isset = NO;
}

- (double) value {
  return __value;
}

- (void) setValue: (double) value {
  __value = value;
  __value_isset = YES;
}

- (BOOL) valueIsSet {
  return __value_isset;
}

- (void) unsetValue {
  __value_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setRefundCouponId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setValue: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"RefundCouponConsumption"];
  if (__refundCouponId_isset) {
    [outProtocol writeFieldBeginWithName: @"refundCouponId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __refundCouponId];
    [outProtocol writeFieldEnd];
  }
  if (__value_isset) {
    [outProtocol writeFieldBeginWithName: @"value" type: TType_DOUBLE fieldID: 2];
    [outProtocol writeDouble: __value];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"RefundCouponConsumption("];
  [ms appendString: @"refundCouponId:"];
  [ms appendFormat: @"%qi", __refundCouponId];
  [ms appendString: @",value:"];
  [ms appendFormat: @"%f", __value];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation BookingRequest

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithMemberId: (int64_t) memberId hotelId: (int32_t) hotelId roomId: (int32_t) roomId checkinTime: (int64_t) checkinTime checkoutTime: (int64_t) checkoutTime roomNumber: (int32_t) roomNumber guest: (NSMutableArray *) guest contactName: (NSString *) contactName contactPhone: (NSString *) contactPhone suppliesOrder: (NSMutableArray *) suppliesOrder refundCouponConsumption: (NSMutableArray *) refundCouponConsumption propertyId: (int32_t) propertyId propertyType: (int32_t) propertyType innSellerId: (int32_t) innSellerId innMarketId: (int32_t) innMarketId
{
  self = [super init];
  __memberId = memberId;
  __memberId_isset = YES;
  __hotelId = hotelId;
  __hotelId_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
  __roomNumber = roomNumber;
  __roomNumber_isset = YES;
  __guest = [guest retain_stub];
  __guest_isset = YES;
  __contactName = [contactName retain_stub];
  __contactName_isset = YES;
  __contactPhone = [contactPhone retain_stub];
  __contactPhone_isset = YES;
  __suppliesOrder = [suppliesOrder retain_stub];
  __suppliesOrder_isset = YES;
  __refundCouponConsumption = [refundCouponConsumption retain_stub];
  __refundCouponConsumption_isset = YES;
  __propertyId = propertyId;
  __propertyId_isset = YES;
  __propertyType = propertyType;
  __propertyType_isset = YES;
  __innSellerId = innSellerId;
  __innSellerId_isset = YES;
  __innMarketId = innMarketId;
  __innMarketId_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"memberId"])
  {
    __memberId = [decoder decodeInt64ForKey: @"memberId"];
    __memberId_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelId"])
  {
    __hotelId = [decoder decodeInt32ForKey: @"hotelId"];
    __hotelId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkinTime"])
  {
    __checkinTime = [decoder decodeInt64ForKey: @"checkinTime"];
    __checkinTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkoutTime"])
  {
    __checkoutTime = [decoder decodeInt64ForKey: @"checkoutTime"];
    __checkoutTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomNumber"])
  {
    __roomNumber = [decoder decodeInt32ForKey: @"roomNumber"];
    __roomNumber_isset = YES;
  }
  if ([decoder containsValueForKey: @"guest"])
  {
    __guest = [[decoder decodeObjectForKey: @"guest"] retain_stub];
    __guest_isset = YES;
  }
  if ([decoder containsValueForKey: @"contactName"])
  {
    __contactName = [[decoder decodeObjectForKey: @"contactName"] retain_stub];
    __contactName_isset = YES;
  }
  if ([decoder containsValueForKey: @"contactPhone"])
  {
    __contactPhone = [[decoder decodeObjectForKey: @"contactPhone"] retain_stub];
    __contactPhone_isset = YES;
  }
  if ([decoder containsValueForKey: @"suppliesOrder"])
  {
    __suppliesOrder = [[decoder decodeObjectForKey: @"suppliesOrder"] retain_stub];
    __suppliesOrder_isset = YES;
  }
  if ([decoder containsValueForKey: @"refundCouponConsumption"])
  {
    __refundCouponConsumption = [[decoder decodeObjectForKey: @"refundCouponConsumption"] retain_stub];
    __refundCouponConsumption_isset = YES;
  }
  if ([decoder containsValueForKey: @"propertyId"])
  {
    __propertyId = [decoder decodeInt32ForKey: @"propertyId"];
    __propertyId_isset = YES;
  }
  if ([decoder containsValueForKey: @"propertyType"])
  {
    __propertyType = [decoder decodeInt32ForKey: @"propertyType"];
    __propertyType_isset = YES;
  }
  if ([decoder containsValueForKey: @"innSellerId"])
  {
    __innSellerId = [decoder decodeInt32ForKey: @"innSellerId"];
    __innSellerId_isset = YES;
  }
  if ([decoder containsValueForKey: @"innMarketId"])
  {
    __innMarketId = [decoder decodeInt32ForKey: @"innMarketId"];
    __innMarketId_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__memberId_isset)
  {
    [encoder encodeInt64: __memberId forKey: @"memberId"];
  }
  if (__hotelId_isset)
  {
    [encoder encodeInt32: __hotelId forKey: @"hotelId"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__checkinTime_isset)
  {
    [encoder encodeInt64: __checkinTime forKey: @"checkinTime"];
  }
  if (__checkoutTime_isset)
  {
    [encoder encodeInt64: __checkoutTime forKey: @"checkoutTime"];
  }
  if (__roomNumber_isset)
  {
    [encoder encodeInt32: __roomNumber forKey: @"roomNumber"];
  }
  if (__guest_isset)
  {
    [encoder encodeObject: __guest forKey: @"guest"];
  }
  if (__contactName_isset)
  {
    [encoder encodeObject: __contactName forKey: @"contactName"];
  }
  if (__contactPhone_isset)
  {
    [encoder encodeObject: __contactPhone forKey: @"contactPhone"];
  }
  if (__suppliesOrder_isset)
  {
    [encoder encodeObject: __suppliesOrder forKey: @"suppliesOrder"];
  }
  if (__refundCouponConsumption_isset)
  {
    [encoder encodeObject: __refundCouponConsumption forKey: @"refundCouponConsumption"];
  }
  if (__propertyId_isset)
  {
    [encoder encodeInt32: __propertyId forKey: @"propertyId"];
  }
  if (__propertyType_isset)
  {
    [encoder encodeInt32: __propertyType forKey: @"propertyType"];
  }
  if (__innSellerId_isset)
  {
    [encoder encodeInt32: __innSellerId forKey: @"innSellerId"];
  }
  if (__innMarketId_isset)
  {
    [encoder encodeInt32: __innMarketId forKey: @"innMarketId"];
  }
}

- (void) dealloc
{
  [__guest release_stub];
  [__contactName release_stub];
  [__contactPhone release_stub];
  [__suppliesOrder release_stub];
  [__refundCouponConsumption release_stub];
  [super dealloc_stub];
}

- (int64_t) memberId {
  return __memberId;
}

- (void) setMemberId: (int64_t) memberId {
  __memberId = memberId;
  __memberId_isset = YES;
}

- (BOOL) memberIdIsSet {
  return __memberId_isset;
}

- (void) unsetMemberId {
  __memberId_isset = NO;
}

- (int32_t) hotelId {
  return __hotelId;
}

- (void) setHotelId: (int32_t) hotelId {
  __hotelId = hotelId;
  __hotelId_isset = YES;
}

- (BOOL) hotelIdIsSet {
  return __hotelId_isset;
}

- (void) unsetHotelId {
  __hotelId_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (int64_t) checkinTime {
  return __checkinTime;
}

- (void) setCheckinTime: (int64_t) checkinTime {
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
}

- (BOOL) checkinTimeIsSet {
  return __checkinTime_isset;
}

- (void) unsetCheckinTime {
  __checkinTime_isset = NO;
}

- (int64_t) checkoutTime {
  return __checkoutTime;
}

- (void) setCheckoutTime: (int64_t) checkoutTime {
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
}

- (BOOL) checkoutTimeIsSet {
  return __checkoutTime_isset;
}

- (void) unsetCheckoutTime {
  __checkoutTime_isset = NO;
}

- (int32_t) roomNumber {
  return __roomNumber;
}

- (void) setRoomNumber: (int32_t) roomNumber {
  __roomNumber = roomNumber;
  __roomNumber_isset = YES;
}

- (BOOL) roomNumberIsSet {
  return __roomNumber_isset;
}

- (void) unsetRoomNumber {
  __roomNumber_isset = NO;
}

- (NSMutableArray *) guest {
  return [[__guest retain_stub] autorelease_stub];
}

- (void) setGuest: (NSMutableArray *) guest {
  [guest retain_stub];
  [__guest release_stub];
  __guest = guest;
  __guest_isset = YES;
}

- (BOOL) guestIsSet {
  return __guest_isset;
}

- (void) unsetGuest {
  [__guest release_stub];
  __guest = nil;
  __guest_isset = NO;
}

- (NSString *) contactName {
  return [[__contactName retain_stub] autorelease_stub];
}

- (void) setContactName: (NSString *) contactName {
  [contactName retain_stub];
  [__contactName release_stub];
  __contactName = contactName;
  __contactName_isset = YES;
}

- (BOOL) contactNameIsSet {
  return __contactName_isset;
}

- (void) unsetContactName {
  [__contactName release_stub];
  __contactName = nil;
  __contactName_isset = NO;
}

- (NSString *) contactPhone {
  return [[__contactPhone retain_stub] autorelease_stub];
}

- (void) setContactPhone: (NSString *) contactPhone {
  [contactPhone retain_stub];
  [__contactPhone release_stub];
  __contactPhone = contactPhone;
  __contactPhone_isset = YES;
}

- (BOOL) contactPhoneIsSet {
  return __contactPhone_isset;
}

- (void) unsetContactPhone {
  [__contactPhone release_stub];
  __contactPhone = nil;
  __contactPhone_isset = NO;
}

- (NSMutableArray *) suppliesOrder {
  return [[__suppliesOrder retain_stub] autorelease_stub];
}

- (void) setSuppliesOrder: (NSMutableArray *) suppliesOrder {
  [suppliesOrder retain_stub];
  [__suppliesOrder release_stub];
  __suppliesOrder = suppliesOrder;
  __suppliesOrder_isset = YES;
}

- (BOOL) suppliesOrderIsSet {
  return __suppliesOrder_isset;
}

- (void) unsetSuppliesOrder {
  [__suppliesOrder release_stub];
  __suppliesOrder = nil;
  __suppliesOrder_isset = NO;
}

- (NSMutableArray *) refundCouponConsumption {
  return [[__refundCouponConsumption retain_stub] autorelease_stub];
}

- (void) setRefundCouponConsumption: (NSMutableArray *) refundCouponConsumption {
  [refundCouponConsumption retain_stub];
  [__refundCouponConsumption release_stub];
  __refundCouponConsumption = refundCouponConsumption;
  __refundCouponConsumption_isset = YES;
}

- (BOOL) refundCouponConsumptionIsSet {
  return __refundCouponConsumption_isset;
}

- (void) unsetRefundCouponConsumption {
  [__refundCouponConsumption release_stub];
  __refundCouponConsumption = nil;
  __refundCouponConsumption_isset = NO;
}

- (int32_t) propertyId {
  return __propertyId;
}

- (void) setPropertyId: (int32_t) propertyId {
  __propertyId = propertyId;
  __propertyId_isset = YES;
}

- (BOOL) propertyIdIsSet {
  return __propertyId_isset;
}

- (void) unsetPropertyId {
  __propertyId_isset = NO;
}

- (int32_t) propertyType {
  return __propertyType;
}

- (void) setPropertyType: (int32_t) propertyType {
  __propertyType = propertyType;
  __propertyType_isset = YES;
}

- (BOOL) propertyTypeIsSet {
  return __propertyType_isset;
}

- (void) unsetPropertyType {
  __propertyType_isset = NO;
}

- (int32_t) innSellerId {
  return __innSellerId;
}

- (void) setInnSellerId: (int32_t) innSellerId {
  __innSellerId = innSellerId;
  __innSellerId_isset = YES;
}

- (BOOL) innSellerIdIsSet {
  return __innSellerId_isset;
}

- (void) unsetInnSellerId {
  __innSellerId_isset = NO;
}

- (int32_t) innMarketId {
  return __innMarketId;
}

- (void) setInnMarketId: (int32_t) innMarketId {
  __innMarketId = innMarketId;
  __innMarketId_isset = YES;
}

- (BOOL) innMarketIdIsSet {
  return __innMarketId_isset;
}

- (void) unsetInnMarketId {
  __innMarketId_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setMemberId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setHotelId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckinTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckoutTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomNumber: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_LIST) {
          int _size0;
          [inProtocol readListBeginReturningElementType: NULL size: &_size0];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size0];
          int _i1;
          for (_i1 = 0; _i1 < _size0; ++_i1)
          {
            NSString * _elem2 = [inProtocol readString];
            [fieldValue addObject: _elem2];
          }
          [inProtocol readListEnd];
          [self setGuest: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setContactName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 9:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setContactPhone: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 10:
        if (fieldType == TType_LIST) {
          int _size3;
          [inProtocol readListBeginReturningElementType: NULL size: &_size3];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size3];
          int _i4;
          for (_i4 = 0; _i4 < _size3; ++_i4)
          {
            SuppliesOrder *_elem5 = [[SuppliesOrder alloc] init];
            [_elem5 read: inProtocol];
            [fieldValue addObject: _elem5];
            [_elem5 release_stub];
          }
          [inProtocol readListEnd];
          [self setSuppliesOrder: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 15:
        if (fieldType == TType_LIST) {
          int _size6;
          [inProtocol readListBeginReturningElementType: NULL size: &_size6];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size6];
          int _i7;
          for (_i7 = 0; _i7 < _size6; ++_i7)
          {
            RefundCouponConsumption *_elem8 = [[RefundCouponConsumption alloc] init];
            [_elem8 read: inProtocol];
            [fieldValue addObject: _elem8];
            [_elem8 release_stub];
          }
          [inProtocol readListEnd];
          [self setRefundCouponConsumption: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 11:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPropertyId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 12:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPropertyType: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 13:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setInnSellerId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 14:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setInnMarketId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"BookingRequest"];
  if (__memberId_isset) {
    [outProtocol writeFieldBeginWithName: @"memberId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __memberId];
    [outProtocol writeFieldEnd];
  }
  if (__hotelId_isset) {
    [outProtocol writeFieldBeginWithName: @"hotelId" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __hotelId];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__checkinTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkinTime" type: TType_I64 fieldID: 4];
    [outProtocol writeI64: __checkinTime];
    [outProtocol writeFieldEnd];
  }
  if (__checkoutTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkoutTime" type: TType_I64 fieldID: 5];
    [outProtocol writeI64: __checkoutTime];
    [outProtocol writeFieldEnd];
  }
  if (__roomNumber_isset) {
    [outProtocol writeFieldBeginWithName: @"roomNumber" type: TType_I32 fieldID: 6];
    [outProtocol writeI32: __roomNumber];
    [outProtocol writeFieldEnd];
  }
  if (__guest_isset) {
    if (__guest != nil) {
      [outProtocol writeFieldBeginWithName: @"guest" type: TType_LIST fieldID: 7];
      {
        [outProtocol writeListBeginWithElementType: TType_STRING size: [__guest count]];
        int i10;
        for (i10 = 0; i10 < [__guest count]; i10++)
        {
          [outProtocol writeString: [__guest objectAtIndex: i10]];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__contactName_isset) {
    if (__contactName != nil) {
      [outProtocol writeFieldBeginWithName: @"contactName" type: TType_STRING fieldID: 8];
      [outProtocol writeString: __contactName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__contactPhone_isset) {
    if (__contactPhone != nil) {
      [outProtocol writeFieldBeginWithName: @"contactPhone" type: TType_STRING fieldID: 9];
      [outProtocol writeString: __contactPhone];
      [outProtocol writeFieldEnd];
    }
  }
  if (__suppliesOrder_isset) {
    if (__suppliesOrder != nil) {
      [outProtocol writeFieldBeginWithName: @"suppliesOrder" type: TType_LIST fieldID: 10];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__suppliesOrder count]];
        int i12;
        for (i12 = 0; i12 < [__suppliesOrder count]; i12++)
        {
          [[__suppliesOrder objectAtIndex: i12] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__refundCouponConsumption_isset) {
    if (__refundCouponConsumption != nil) {
      [outProtocol writeFieldBeginWithName: @"refundCouponConsumption" type: TType_LIST fieldID: 15];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__refundCouponConsumption count]];
        int i14;
        for (i14 = 0; i14 < [__refundCouponConsumption count]; i14++)
        {
          [[__refundCouponConsumption objectAtIndex: i14] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__propertyId_isset) {
    [outProtocol writeFieldBeginWithName: @"propertyId" type: TType_I32 fieldID: 11];
    [outProtocol writeI32: __propertyId];
    [outProtocol writeFieldEnd];
  }
  if (__propertyType_isset) {
    [outProtocol writeFieldBeginWithName: @"propertyType" type: TType_I32 fieldID: 12];
    [outProtocol writeI32: __propertyType];
    [outProtocol writeFieldEnd];
  }
  if (__innSellerId_isset) {
    [outProtocol writeFieldBeginWithName: @"innSellerId" type: TType_I32 fieldID: 13];
    [outProtocol writeI32: __innSellerId];
    [outProtocol writeFieldEnd];
  }
  if (__innMarketId_isset) {
    [outProtocol writeFieldBeginWithName: @"innMarketId" type: TType_I32 fieldID: 14];
    [outProtocol writeI32: __innMarketId];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"BookingRequest("];
  [ms appendString: @"memberId:"];
  [ms appendFormat: @"%qi", __memberId];
  [ms appendString: @",hotelId:"];
  [ms appendFormat: @"%i", __hotelId];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",checkinTime:"];
  [ms appendFormat: @"%qi", __checkinTime];
  [ms appendString: @",checkoutTime:"];
  [ms appendFormat: @"%qi", __checkoutTime];
  [ms appendString: @",roomNumber:"];
  [ms appendFormat: @"%i", __roomNumber];
  [ms appendString: @",guest:"];
  [ms appendFormat: @"%@", __guest];
  [ms appendString: @",contactName:"];
  [ms appendFormat: @"\"%@\"", __contactName];
  [ms appendString: @",contactPhone:"];
  [ms appendFormat: @"\"%@\"", __contactPhone];
  [ms appendString: @",suppliesOrder:"];
  [ms appendFormat: @"%@", __suppliesOrder];
  [ms appendString: @",refundCouponConsumption:"];
  [ms appendFormat: @"%@", __refundCouponConsumption];
  [ms appendString: @",propertyId:"];
  [ms appendFormat: @"%i", __propertyId];
  [ms appendString: @",propertyType:"];
  [ms appendFormat: @"%i", __propertyType];
  [ms appendString: @",innSellerId:"];
  [ms appendFormat: @"%i", __innSellerId];
  [ms appendString: @",innMarketId:"];
  [ms appendFormat: @"%i", __innMarketId];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation ReservationRequest

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithMemberId: (int64_t) memberId reservationId: (int64_t) reservationId hotelId: (int32_t) hotelId
{
  self = [super init];
  __memberId = memberId;
  __memberId_isset = YES;
  __reservationId = reservationId;
  __reservationId_isset = YES;
  __hotelId = hotelId;
  __hotelId_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"memberId"])
  {
    __memberId = [decoder decodeInt64ForKey: @"memberId"];
    __memberId_isset = YES;
  }
  if ([decoder containsValueForKey: @"reservationId"])
  {
    __reservationId = [decoder decodeInt64ForKey: @"reservationId"];
    __reservationId_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelId"])
  {
    __hotelId = [decoder decodeInt32ForKey: @"hotelId"];
    __hotelId_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__memberId_isset)
  {
    [encoder encodeInt64: __memberId forKey: @"memberId"];
  }
  if (__reservationId_isset)
  {
    [encoder encodeInt64: __reservationId forKey: @"reservationId"];
  }
  if (__hotelId_isset)
  {
    [encoder encodeInt32: __hotelId forKey: @"hotelId"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int64_t) memberId {
  return __memberId;
}

- (void) setMemberId: (int64_t) memberId {
  __memberId = memberId;
  __memberId_isset = YES;
}

- (BOOL) memberIdIsSet {
  return __memberId_isset;
}

- (void) unsetMemberId {
  __memberId_isset = NO;
}

- (int64_t) reservationId {
  return __reservationId;
}

- (void) setReservationId: (int64_t) reservationId {
  __reservationId = reservationId;
  __reservationId_isset = YES;
}

- (BOOL) reservationIdIsSet {
  return __reservationId_isset;
}

- (void) unsetReservationId {
  __reservationId_isset = NO;
}

- (int32_t) hotelId {
  return __hotelId;
}

- (void) setHotelId: (int32_t) hotelId {
  __hotelId = hotelId;
  __hotelId_isset = YES;
}

- (BOOL) hotelIdIsSet {
  return __hotelId_isset;
}

- (void) unsetHotelId {
  __hotelId_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setMemberId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setReservationId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setHotelId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"ReservationRequest"];
  if (__memberId_isset) {
    [outProtocol writeFieldBeginWithName: @"memberId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __memberId];
    [outProtocol writeFieldEnd];
  }
  if (__reservationId_isset) {
    [outProtocol writeFieldBeginWithName: @"reservationId" type: TType_I64 fieldID: 2];
    [outProtocol writeI64: __reservationId];
    [outProtocol writeFieldEnd];
  }
  if (__hotelId_isset) {
    [outProtocol writeFieldBeginWithName: @"hotelId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __hotelId];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"ReservationRequest("];
  [ms appendString: @"memberId:"];
  [ms appendFormat: @"%qi", __memberId];
  [ms appendString: @",reservationId:"];
  [ms appendFormat: @"%qi", __reservationId];
  [ms appendString: @",hotelId:"];
  [ms appendFormat: @"%i", __hotelId];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation VoucherConsumption

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithVoucherId: (int64_t) voucherId value: (double) value
{
  self = [super init];
  __voucherId = voucherId;
  __voucherId_isset = YES;
  __value = value;
  __value_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"voucherId"])
  {
    __voucherId = [decoder decodeInt64ForKey: @"voucherId"];
    __voucherId_isset = YES;
  }
  if ([decoder containsValueForKey: @"value"])
  {
    __value = [decoder decodeDoubleForKey: @"value"];
    __value_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__voucherId_isset)
  {
    [encoder encodeInt64: __voucherId forKey: @"voucherId"];
  }
  if (__value_isset)
  {
    [encoder encodeDouble: __value forKey: @"value"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int64_t) voucherId {
  return __voucherId;
}

- (void) setVoucherId: (int64_t) voucherId {
  __voucherId = voucherId;
  __voucherId_isset = YES;
}

- (BOOL) voucherIdIsSet {
  return __voucherId_isset;
}

- (void) unsetVoucherId {
  __voucherId_isset = NO;
}

- (double) value {
  return __value;
}

- (void) setValue: (double) value {
  __value = value;
  __value_isset = YES;
}

- (BOOL) valueIsSet {
  return __value_isset;
}

- (void) unsetValue {
  __value_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setVoucherId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setValue: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"VoucherConsumption"];
  if (__voucherId_isset) {
    [outProtocol writeFieldBeginWithName: @"voucherId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __voucherId];
    [outProtocol writeFieldEnd];
  }
  if (__value_isset) {
    [outProtocol writeFieldBeginWithName: @"value" type: TType_DOUBLE fieldID: 2];
    [outProtocol writeDouble: __value];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"VoucherConsumption("];
  [ms appendString: @"voucherId:"];
  [ms appendFormat: @"%qi", __voucherId];
  [ms appendString: @",value:"];
  [ms appendFormat: @"%f", __value];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation Reservation

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithReservationId: (int64_t) reservationId status: (int32_t) status returnCode: (int32_t) returnCode hotelId: (int32_t) hotelId hotelName: (NSString *) hotelName hotelAddress: (NSString *) hotelAddress hotelPhone: (NSString *) hotelPhone checkinTime: (int64_t) checkinTime checkoutTime: (int64_t) checkoutTime roomId: (int32_t) roomId roomName: (NSString *) roomName roomNumber: (int32_t) roomNumber guest: (NSMutableArray *) guest contactName: (NSString *) contactName contactPhone: (NSString *) contactPhone suppliesOrder: (NSMutableArray *) suppliesOrder totalPrice: (double) totalPrice paymentStatus: (int32_t) paymentStatus cancelable: (BOOL) cancelable keepOnLatestTime: (int64_t) keepOnLatestTime
{
  self = [super init];
  __reservationId = reservationId;
  __reservationId_isset = YES;
  __status = status;
  __status_isset = YES;
  __returnCode = returnCode;
  __returnCode_isset = YES;
  __hotelId = hotelId;
  __hotelId_isset = YES;
  __hotelName = [hotelName retain_stub];
  __hotelName_isset = YES;
  __hotelAddress = [hotelAddress retain_stub];
  __hotelAddress_isset = YES;
  __hotelPhone = [hotelPhone retain_stub];
  __hotelPhone_isset = YES;
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __roomName = [roomName retain_stub];
  __roomName_isset = YES;
  __roomNumber = roomNumber;
  __roomNumber_isset = YES;
  __guest = [guest retain_stub];
  __guest_isset = YES;
  __contactName = [contactName retain_stub];
  __contactName_isset = YES;
  __contactPhone = [contactPhone retain_stub];
  __contactPhone_isset = YES;
  __suppliesOrder = [suppliesOrder retain_stub];
  __suppliesOrder_isset = YES;
  __totalPrice = totalPrice;
  __totalPrice_isset = YES;
  __paymentStatus = paymentStatus;
  __paymentStatus_isset = YES;
  __cancelable = cancelable;
  __cancelable_isset = YES;
  __keepOnLatestTime = keepOnLatestTime;
  __keepOnLatestTime_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"reservationId"])
  {
    __reservationId = [decoder decodeInt64ForKey: @"reservationId"];
    __reservationId_isset = YES;
  }
  if ([decoder containsValueForKey: @"status"])
  {
    __status = [decoder decodeInt32ForKey: @"status"];
    __status_isset = YES;
  }
  if ([decoder containsValueForKey: @"returnCode"])
  {
    __returnCode = [decoder decodeInt32ForKey: @"returnCode"];
    __returnCode_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelId"])
  {
    __hotelId = [decoder decodeInt32ForKey: @"hotelId"];
    __hotelId_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelName"])
  {
    __hotelName = [[decoder decodeObjectForKey: @"hotelName"] retain_stub];
    __hotelName_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelAddress"])
  {
    __hotelAddress = [[decoder decodeObjectForKey: @"hotelAddress"] retain_stub];
    __hotelAddress_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelPhone"])
  {
    __hotelPhone = [[decoder decodeObjectForKey: @"hotelPhone"] retain_stub];
    __hotelPhone_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkinTime"])
  {
    __checkinTime = [decoder decodeInt64ForKey: @"checkinTime"];
    __checkinTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkoutTime"])
  {
    __checkoutTime = [decoder decodeInt64ForKey: @"checkoutTime"];
    __checkoutTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomName"])
  {
    __roomName = [[decoder decodeObjectForKey: @"roomName"] retain_stub];
    __roomName_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomNumber"])
  {
    __roomNumber = [decoder decodeInt32ForKey: @"roomNumber"];
    __roomNumber_isset = YES;
  }
  if ([decoder containsValueForKey: @"guest"])
  {
    __guest = [[decoder decodeObjectForKey: @"guest"] retain_stub];
    __guest_isset = YES;
  }
  if ([decoder containsValueForKey: @"contactName"])
  {
    __contactName = [[decoder decodeObjectForKey: @"contactName"] retain_stub];
    __contactName_isset = YES;
  }
  if ([decoder containsValueForKey: @"contactPhone"])
  {
    __contactPhone = [[decoder decodeObjectForKey: @"contactPhone"] retain_stub];
    __contactPhone_isset = YES;
  }
  if ([decoder containsValueForKey: @"suppliesOrder"])
  {
    __suppliesOrder = [[decoder decodeObjectForKey: @"suppliesOrder"] retain_stub];
    __suppliesOrder_isset = YES;
  }
  if ([decoder containsValueForKey: @"totalPrice"])
  {
    __totalPrice = [decoder decodeDoubleForKey: @"totalPrice"];
    __totalPrice_isset = YES;
  }
  if ([decoder containsValueForKey: @"paymentStatus"])
  {
    __paymentStatus = [decoder decodeInt32ForKey: @"paymentStatus"];
    __paymentStatus_isset = YES;
  }
  if ([decoder containsValueForKey: @"cancelable"])
  {
    __cancelable = [decoder decodeBoolForKey: @"cancelable"];
    __cancelable_isset = YES;
  }
  if ([decoder containsValueForKey: @"keepOnLatestTime"])
  {
    __keepOnLatestTime = [decoder decodeInt64ForKey: @"keepOnLatestTime"];
    __keepOnLatestTime_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__reservationId_isset)
  {
    [encoder encodeInt64: __reservationId forKey: @"reservationId"];
  }
  if (__status_isset)
  {
    [encoder encodeInt32: __status forKey: @"status"];
  }
  if (__returnCode_isset)
  {
    [encoder encodeInt32: __returnCode forKey: @"returnCode"];
  }
  if (__hotelId_isset)
  {
    [encoder encodeInt32: __hotelId forKey: @"hotelId"];
  }
  if (__hotelName_isset)
  {
    [encoder encodeObject: __hotelName forKey: @"hotelName"];
  }
  if (__hotelAddress_isset)
  {
    [encoder encodeObject: __hotelAddress forKey: @"hotelAddress"];
  }
  if (__hotelPhone_isset)
  {
    [encoder encodeObject: __hotelPhone forKey: @"hotelPhone"];
  }
  if (__checkinTime_isset)
  {
    [encoder encodeInt64: __checkinTime forKey: @"checkinTime"];
  }
  if (__checkoutTime_isset)
  {
    [encoder encodeInt64: __checkoutTime forKey: @"checkoutTime"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__roomName_isset)
  {
    [encoder encodeObject: __roomName forKey: @"roomName"];
  }
  if (__roomNumber_isset)
  {
    [encoder encodeInt32: __roomNumber forKey: @"roomNumber"];
  }
  if (__guest_isset)
  {
    [encoder encodeObject: __guest forKey: @"guest"];
  }
  if (__contactName_isset)
  {
    [encoder encodeObject: __contactName forKey: @"contactName"];
  }
  if (__contactPhone_isset)
  {
    [encoder encodeObject: __contactPhone forKey: @"contactPhone"];
  }
  if (__suppliesOrder_isset)
  {
    [encoder encodeObject: __suppliesOrder forKey: @"suppliesOrder"];
  }
  if (__totalPrice_isset)
  {
    [encoder encodeDouble: __totalPrice forKey: @"totalPrice"];
  }
  if (__paymentStatus_isset)
  {
    [encoder encodeInt32: __paymentStatus forKey: @"paymentStatus"];
  }
  if (__cancelable_isset)
  {
    [encoder encodeBool: __cancelable forKey: @"cancelable"];
  }
  if (__keepOnLatestTime_isset)
  {
    [encoder encodeInt64: __keepOnLatestTime forKey: @"keepOnLatestTime"];
  }
}

- (void) dealloc
{
  [__hotelName release_stub];
  [__hotelAddress release_stub];
  [__hotelPhone release_stub];
  [__roomName release_stub];
  [__guest release_stub];
  [__contactName release_stub];
  [__contactPhone release_stub];
  [__suppliesOrder release_stub];
  [super dealloc_stub];
}

- (int64_t) reservationId {
  return __reservationId;
}

- (void) setReservationId: (int64_t) reservationId {
  __reservationId = reservationId;
  __reservationId_isset = YES;
}

- (BOOL) reservationIdIsSet {
  return __reservationId_isset;
}

- (void) unsetReservationId {
  __reservationId_isset = NO;
}

- (int32_t) status {
  return __status;
}

- (void) setStatus: (int32_t) status {
  __status = status;
  __status_isset = YES;
}

- (BOOL) statusIsSet {
  return __status_isset;
}

- (void) unsetStatus {
  __status_isset = NO;
}

- (int32_t) returnCode {
  return __returnCode;
}

- (void) setReturnCode: (int32_t) returnCode {
  __returnCode = returnCode;
  __returnCode_isset = YES;
}

- (BOOL) returnCodeIsSet {
  return __returnCode_isset;
}

- (void) unsetReturnCode {
  __returnCode_isset = NO;
}

- (int32_t) hotelId {
  return __hotelId;
}

- (void) setHotelId: (int32_t) hotelId {
  __hotelId = hotelId;
  __hotelId_isset = YES;
}

- (BOOL) hotelIdIsSet {
  return __hotelId_isset;
}

- (void) unsetHotelId {
  __hotelId_isset = NO;
}

- (NSString *) hotelName {
  return [[__hotelName retain_stub] autorelease_stub];
}

- (void) setHotelName: (NSString *) hotelName {
  [hotelName retain_stub];
  [__hotelName release_stub];
  __hotelName = hotelName;
  __hotelName_isset = YES;
}

- (BOOL) hotelNameIsSet {
  return __hotelName_isset;
}

- (void) unsetHotelName {
  [__hotelName release_stub];
  __hotelName = nil;
  __hotelName_isset = NO;
}

- (NSString *) hotelAddress {
  return [[__hotelAddress retain_stub] autorelease_stub];
}

- (void) setHotelAddress: (NSString *) hotelAddress {
  [hotelAddress retain_stub];
  [__hotelAddress release_stub];
  __hotelAddress = hotelAddress;
  __hotelAddress_isset = YES;
}

- (BOOL) hotelAddressIsSet {
  return __hotelAddress_isset;
}

- (void) unsetHotelAddress {
  [__hotelAddress release_stub];
  __hotelAddress = nil;
  __hotelAddress_isset = NO;
}

- (NSString *) hotelPhone {
  return [[__hotelPhone retain_stub] autorelease_stub];
}

- (void) setHotelPhone: (NSString *) hotelPhone {
  [hotelPhone retain_stub];
  [__hotelPhone release_stub];
  __hotelPhone = hotelPhone;
  __hotelPhone_isset = YES;
}

- (BOOL) hotelPhoneIsSet {
  return __hotelPhone_isset;
}

- (void) unsetHotelPhone {
  [__hotelPhone release_stub];
  __hotelPhone = nil;
  __hotelPhone_isset = NO;
}

- (int64_t) checkinTime {
  return __checkinTime;
}

- (void) setCheckinTime: (int64_t) checkinTime {
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
}

- (BOOL) checkinTimeIsSet {
  return __checkinTime_isset;
}

- (void) unsetCheckinTime {
  __checkinTime_isset = NO;
}

- (int64_t) checkoutTime {
  return __checkoutTime;
}

- (void) setCheckoutTime: (int64_t) checkoutTime {
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
}

- (BOOL) checkoutTimeIsSet {
  return __checkoutTime_isset;
}

- (void) unsetCheckoutTime {
  __checkoutTime_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (NSString *) roomName {
  return [[__roomName retain_stub] autorelease_stub];
}

- (void) setRoomName: (NSString *) roomName {
  [roomName retain_stub];
  [__roomName release_stub];
  __roomName = roomName;
  __roomName_isset = YES;
}

- (BOOL) roomNameIsSet {
  return __roomName_isset;
}

- (void) unsetRoomName {
  [__roomName release_stub];
  __roomName = nil;
  __roomName_isset = NO;
}

- (int32_t) roomNumber {
  return __roomNumber;
}

- (void) setRoomNumber: (int32_t) roomNumber {
  __roomNumber = roomNumber;
  __roomNumber_isset = YES;
}

- (BOOL) roomNumberIsSet {
  return __roomNumber_isset;
}

- (void) unsetRoomNumber {
  __roomNumber_isset = NO;
}

- (NSMutableArray *) guest {
  return [[__guest retain_stub] autorelease_stub];
}

- (void) setGuest: (NSMutableArray *) guest {
  [guest retain_stub];
  [__guest release_stub];
  __guest = guest;
  __guest_isset = YES;
}

- (BOOL) guestIsSet {
  return __guest_isset;
}

- (void) unsetGuest {
  [__guest release_stub];
  __guest = nil;
  __guest_isset = NO;
}

- (NSString *) contactName {
  return [[__contactName retain_stub] autorelease_stub];
}

- (void) setContactName: (NSString *) contactName {
  [contactName retain_stub];
  [__contactName release_stub];
  __contactName = contactName;
  __contactName_isset = YES;
}

- (BOOL) contactNameIsSet {
  return __contactName_isset;
}

- (void) unsetContactName {
  [__contactName release_stub];
  __contactName = nil;
  __contactName_isset = NO;
}

- (NSString *) contactPhone {
  return [[__contactPhone retain_stub] autorelease_stub];
}

- (void) setContactPhone: (NSString *) contactPhone {
  [contactPhone retain_stub];
  [__contactPhone release_stub];
  __contactPhone = contactPhone;
  __contactPhone_isset = YES;
}

- (BOOL) contactPhoneIsSet {
  return __contactPhone_isset;
}

- (void) unsetContactPhone {
  [__contactPhone release_stub];
  __contactPhone = nil;
  __contactPhone_isset = NO;
}

- (NSMutableArray *) suppliesOrder {
  return [[__suppliesOrder retain_stub] autorelease_stub];
}

- (void) setSuppliesOrder: (NSMutableArray *) suppliesOrder {
  [suppliesOrder retain_stub];
  [__suppliesOrder release_stub];
  __suppliesOrder = suppliesOrder;
  __suppliesOrder_isset = YES;
}

- (BOOL) suppliesOrderIsSet {
  return __suppliesOrder_isset;
}

- (void) unsetSuppliesOrder {
  [__suppliesOrder release_stub];
  __suppliesOrder = nil;
  __suppliesOrder_isset = NO;
}

- (double) totalPrice {
  return __totalPrice;
}

- (void) setTotalPrice: (double) totalPrice {
  __totalPrice = totalPrice;
  __totalPrice_isset = YES;
}

- (BOOL) totalPriceIsSet {
  return __totalPrice_isset;
}

- (void) unsetTotalPrice {
  __totalPrice_isset = NO;
}

- (int32_t) paymentStatus {
  return __paymentStatus;
}

- (void) setPaymentStatus: (int32_t) paymentStatus {
  __paymentStatus = paymentStatus;
  __paymentStatus_isset = YES;
}

- (BOOL) paymentStatusIsSet {
  return __paymentStatus_isset;
}

- (void) unsetPaymentStatus {
  __paymentStatus_isset = NO;
}

- (BOOL) cancelable {
  return __cancelable;
}

- (void) setCancelable: (BOOL) cancelable {
  __cancelable = cancelable;
  __cancelable_isset = YES;
}

- (BOOL) cancelableIsSet {
  return __cancelable_isset;
}

- (void) unsetCancelable {
  __cancelable_isset = NO;
}

- (int64_t) keepOnLatestTime {
  return __keepOnLatestTime;
}

- (void) setKeepOnLatestTime: (int64_t) keepOnLatestTime {
  __keepOnLatestTime = keepOnLatestTime;
  __keepOnLatestTime_isset = YES;
}

- (BOOL) keepOnLatestTimeIsSet {
  return __keepOnLatestTime_isset;
}

- (void) unsetKeepOnLatestTime {
  __keepOnLatestTime_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setReservationId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setStatus: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 20:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setReturnCode: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setHotelId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setHotelName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setHotelAddress: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setHotelPhone: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckinTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckoutTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 9:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 10:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setRoomName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 11:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomNumber: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 12:
        if (fieldType == TType_LIST) {
          int _size15;
          [inProtocol readListBeginReturningElementType: NULL size: &_size15];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size15];
          int _i16;
          for (_i16 = 0; _i16 < _size15; ++_i16)
          {
            NSString * _elem17 = [inProtocol readString];
            [fieldValue addObject: _elem17];
          }
          [inProtocol readListEnd];
          [self setGuest: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 13:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setContactName: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 14:
        if (fieldType == TType_STRING) {
          NSString * fieldValue = [inProtocol readString];
          [self setContactPhone: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 18:
        if (fieldType == TType_LIST) {
          int _size18;
          [inProtocol readListBeginReturningElementType: NULL size: &_size18];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size18];
          int _i19;
          for (_i19 = 0; _i19 < _size18; ++_i19)
          {
            SuppliesOrder *_elem20 = [[SuppliesOrder alloc] init];
            [_elem20 read: inProtocol];
            [fieldValue addObject: _elem20];
            [_elem20 release_stub];
          }
          [inProtocol readListEnd];
          [self setSuppliesOrder: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 15:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setTotalPrice: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 16:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPaymentStatus: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 17:
        if (fieldType == TType_BOOL) {
          BOOL fieldValue = [inProtocol readBool];
          [self setCancelable: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 19:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setKeepOnLatestTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"Reservation"];
  if (__reservationId_isset) {
    [outProtocol writeFieldBeginWithName: @"reservationId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __reservationId];
    [outProtocol writeFieldEnd];
  }
  if (__status_isset) {
    [outProtocol writeFieldBeginWithName: @"status" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __status];
    [outProtocol writeFieldEnd];
  }
  if (__returnCode_isset) {
    [outProtocol writeFieldBeginWithName: @"returnCode" type: TType_I32 fieldID: 20];
    [outProtocol writeI32: __returnCode];
    [outProtocol writeFieldEnd];
  }
  if (__hotelId_isset) {
    [outProtocol writeFieldBeginWithName: @"hotelId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __hotelId];
    [outProtocol writeFieldEnd];
  }
  if (__hotelName_isset) {
    if (__hotelName != nil) {
      [outProtocol writeFieldBeginWithName: @"hotelName" type: TType_STRING fieldID: 4];
      [outProtocol writeString: __hotelName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__hotelAddress_isset) {
    if (__hotelAddress != nil) {
      [outProtocol writeFieldBeginWithName: @"hotelAddress" type: TType_STRING fieldID: 5];
      [outProtocol writeString: __hotelAddress];
      [outProtocol writeFieldEnd];
    }
  }
  if (__hotelPhone_isset) {
    if (__hotelPhone != nil) {
      [outProtocol writeFieldBeginWithName: @"hotelPhone" type: TType_STRING fieldID: 6];
      [outProtocol writeString: __hotelPhone];
      [outProtocol writeFieldEnd];
    }
  }
  if (__checkinTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkinTime" type: TType_I64 fieldID: 7];
    [outProtocol writeI64: __checkinTime];
    [outProtocol writeFieldEnd];
  }
  if (__checkoutTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkoutTime" type: TType_I64 fieldID: 8];
    [outProtocol writeI64: __checkoutTime];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 9];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__roomName_isset) {
    if (__roomName != nil) {
      [outProtocol writeFieldBeginWithName: @"roomName" type: TType_STRING fieldID: 10];
      [outProtocol writeString: __roomName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__roomNumber_isset) {
    [outProtocol writeFieldBeginWithName: @"roomNumber" type: TType_I32 fieldID: 11];
    [outProtocol writeI32: __roomNumber];
    [outProtocol writeFieldEnd];
  }
  if (__guest_isset) {
    if (__guest != nil) {
      [outProtocol writeFieldBeginWithName: @"guest" type: TType_LIST fieldID: 12];
      {
        [outProtocol writeListBeginWithElementType: TType_STRING size: [__guest count]];
        int i22;
        for (i22 = 0; i22 < [__guest count]; i22++)
        {
          [outProtocol writeString: [__guest objectAtIndex: i22]];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__contactName_isset) {
    if (__contactName != nil) {
      [outProtocol writeFieldBeginWithName: @"contactName" type: TType_STRING fieldID: 13];
      [outProtocol writeString: __contactName];
      [outProtocol writeFieldEnd];
    }
  }
  if (__contactPhone_isset) {
    if (__contactPhone != nil) {
      [outProtocol writeFieldBeginWithName: @"contactPhone" type: TType_STRING fieldID: 14];
      [outProtocol writeString: __contactPhone];
      [outProtocol writeFieldEnd];
    }
  }
  if (__suppliesOrder_isset) {
    if (__suppliesOrder != nil) {
      [outProtocol writeFieldBeginWithName: @"suppliesOrder" type: TType_LIST fieldID: 18];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__suppliesOrder count]];
        int i24;
        for (i24 = 0; i24 < [__suppliesOrder count]; i24++)
        {
          [[__suppliesOrder objectAtIndex: i24] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__totalPrice_isset) {
    [outProtocol writeFieldBeginWithName: @"totalPrice" type: TType_DOUBLE fieldID: 15];
    [outProtocol writeDouble: __totalPrice];
    [outProtocol writeFieldEnd];
  }
  if (__paymentStatus_isset) {
    [outProtocol writeFieldBeginWithName: @"paymentStatus" type: TType_I32 fieldID: 16];
    [outProtocol writeI32: __paymentStatus];
    [outProtocol writeFieldEnd];
  }
  if (__cancelable_isset) {
    [outProtocol writeFieldBeginWithName: @"cancelable" type: TType_BOOL fieldID: 17];
    [outProtocol writeBool: __cancelable];
    [outProtocol writeFieldEnd];
  }
  if (__keepOnLatestTime_isset) {
    [outProtocol writeFieldBeginWithName: @"keepOnLatestTime" type: TType_I64 fieldID: 19];
    [outProtocol writeI64: __keepOnLatestTime];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"Reservation("];
  [ms appendString: @"reservationId:"];
  [ms appendFormat: @"%qi", __reservationId];
  [ms appendString: @",status:"];
  [ms appendFormat: @"%i", __status];
  [ms appendString: @",returnCode:"];
  [ms appendFormat: @"%i", __returnCode];
  [ms appendString: @",hotelId:"];
  [ms appendFormat: @"%i", __hotelId];
  [ms appendString: @",hotelName:"];
  [ms appendFormat: @"\"%@\"", __hotelName];
  [ms appendString: @",hotelAddress:"];
  [ms appendFormat: @"\"%@\"", __hotelAddress];
  [ms appendString: @",hotelPhone:"];
  [ms appendFormat: @"\"%@\"", __hotelPhone];
  [ms appendString: @",checkinTime:"];
  [ms appendFormat: @"%qi", __checkinTime];
  [ms appendString: @",checkoutTime:"];
  [ms appendFormat: @"%qi", __checkoutTime];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",roomName:"];
  [ms appendFormat: @"\"%@\"", __roomName];
  [ms appendString: @",roomNumber:"];
  [ms appendFormat: @"%i", __roomNumber];
  [ms appendString: @",guest:"];
  [ms appendFormat: @"%@", __guest];
  [ms appendString: @",contactName:"];
  [ms appendFormat: @"\"%@\"", __contactName];
  [ms appendString: @",contactPhone:"];
  [ms appendFormat: @"\"%@\"", __contactPhone];
  [ms appendString: @",suppliesOrder:"];
  [ms appendFormat: @"%@", __suppliesOrder];
  [ms appendString: @",totalPrice:"];
  [ms appendFormat: @"%f", __totalPrice];
  [ms appendString: @",paymentStatus:"];
  [ms appendFormat: @"%i", __paymentStatus];
  [ms appendString: @",cancelable:"];
  [ms appendFormat: @"%i", __cancelable];
  [ms appendString: @",keepOnLatestTime:"];
  [ms appendFormat: @"%qi", __keepOnLatestTime];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation PayRequest

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithMemberId: (int64_t) memberId reservationId: (int64_t) reservationId hotelId: (int32_t) hotelId voucherConsumption: (NSMutableArray *) voucherConsumption refundCouponConsumption: (NSMutableArray *) refundCouponConsumption storedValue: (double) storedValue fastPayAmount: (double) fastPayAmount
{
  self = [super init];
  __memberId = memberId;
  __memberId_isset = YES;
  __reservationId = reservationId;
  __reservationId_isset = YES;
  __hotelId = hotelId;
  __hotelId_isset = YES;
  __voucherConsumption = [voucherConsumption retain_stub];
  __voucherConsumption_isset = YES;
  __refundCouponConsumption = [refundCouponConsumption retain_stub];
  __refundCouponConsumption_isset = YES;
  __storedValue = storedValue;
  __storedValue_isset = YES;
  __fastPayAmount = fastPayAmount;
  __fastPayAmount_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"memberId"])
  {
    __memberId = [decoder decodeInt64ForKey: @"memberId"];
    __memberId_isset = YES;
  }
  if ([decoder containsValueForKey: @"reservationId"])
  {
    __reservationId = [decoder decodeInt64ForKey: @"reservationId"];
    __reservationId_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelId"])
  {
    __hotelId = [decoder decodeInt32ForKey: @"hotelId"];
    __hotelId_isset = YES;
  }
  if ([decoder containsValueForKey: @"voucherConsumption"])
  {
    __voucherConsumption = [[decoder decodeObjectForKey: @"voucherConsumption"] retain_stub];
    __voucherConsumption_isset = YES;
  }
  if ([decoder containsValueForKey: @"refundCouponConsumption"])
  {
    __refundCouponConsumption = [[decoder decodeObjectForKey: @"refundCouponConsumption"] retain_stub];
    __refundCouponConsumption_isset = YES;
  }
  if ([decoder containsValueForKey: @"storedValue"])
  {
    __storedValue = [decoder decodeDoubleForKey: @"storedValue"];
    __storedValue_isset = YES;
  }
  if ([decoder containsValueForKey: @"fastPayAmount"])
  {
    __fastPayAmount = [decoder decodeDoubleForKey: @"fastPayAmount"];
    __fastPayAmount_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__memberId_isset)
  {
    [encoder encodeInt64: __memberId forKey: @"memberId"];
  }
  if (__reservationId_isset)
  {
    [encoder encodeInt64: __reservationId forKey: @"reservationId"];
  }
  if (__hotelId_isset)
  {
    [encoder encodeInt32: __hotelId forKey: @"hotelId"];
  }
  if (__voucherConsumption_isset)
  {
    [encoder encodeObject: __voucherConsumption forKey: @"voucherConsumption"];
  }
  if (__refundCouponConsumption_isset)
  {
    [encoder encodeObject: __refundCouponConsumption forKey: @"refundCouponConsumption"];
  }
  if (__storedValue_isset)
  {
    [encoder encodeDouble: __storedValue forKey: @"storedValue"];
  }
  if (__fastPayAmount_isset)
  {
    [encoder encodeDouble: __fastPayAmount forKey: @"fastPayAmount"];
  }
}

- (void) dealloc
{
  [__voucherConsumption release_stub];
  [__refundCouponConsumption release_stub];
  [super dealloc_stub];
}

- (int64_t) memberId {
  return __memberId;
}

- (void) setMemberId: (int64_t) memberId {
  __memberId = memberId;
  __memberId_isset = YES;
}

- (BOOL) memberIdIsSet {
  return __memberId_isset;
}

- (void) unsetMemberId {
  __memberId_isset = NO;
}

- (int64_t) reservationId {
  return __reservationId;
}

- (void) setReservationId: (int64_t) reservationId {
  __reservationId = reservationId;
  __reservationId_isset = YES;
}

- (BOOL) reservationIdIsSet {
  return __reservationId_isset;
}

- (void) unsetReservationId {
  __reservationId_isset = NO;
}

- (int32_t) hotelId {
  return __hotelId;
}

- (void) setHotelId: (int32_t) hotelId {
  __hotelId = hotelId;
  __hotelId_isset = YES;
}

- (BOOL) hotelIdIsSet {
  return __hotelId_isset;
}

- (void) unsetHotelId {
  __hotelId_isset = NO;
}

- (NSMutableArray *) voucherConsumption {
  return [[__voucherConsumption retain_stub] autorelease_stub];
}

- (void) setVoucherConsumption: (NSMutableArray *) voucherConsumption {
  [voucherConsumption retain_stub];
  [__voucherConsumption release_stub];
  __voucherConsumption = voucherConsumption;
  __voucherConsumption_isset = YES;
}

- (BOOL) voucherConsumptionIsSet {
  return __voucherConsumption_isset;
}

- (void) unsetVoucherConsumption {
  [__voucherConsumption release_stub];
  __voucherConsumption = nil;
  __voucherConsumption_isset = NO;
}

- (NSMutableArray *) refundCouponConsumption {
  return [[__refundCouponConsumption retain_stub] autorelease_stub];
}

- (void) setRefundCouponConsumption: (NSMutableArray *) refundCouponConsumption {
  [refundCouponConsumption retain_stub];
  [__refundCouponConsumption release_stub];
  __refundCouponConsumption = refundCouponConsumption;
  __refundCouponConsumption_isset = YES;
}

- (BOOL) refundCouponConsumptionIsSet {
  return __refundCouponConsumption_isset;
}

- (void) unsetRefundCouponConsumption {
  [__refundCouponConsumption release_stub];
  __refundCouponConsumption = nil;
  __refundCouponConsumption_isset = NO;
}

- (double) storedValue {
  return __storedValue;
}

- (void) setStoredValue: (double) storedValue {
  __storedValue = storedValue;
  __storedValue_isset = YES;
}

- (BOOL) storedValueIsSet {
  return __storedValue_isset;
}

- (void) unsetStoredValue {
  __storedValue_isset = NO;
}

- (double) fastPayAmount {
  return __fastPayAmount;
}

- (void) setFastPayAmount: (double) fastPayAmount {
  __fastPayAmount = fastPayAmount;
  __fastPayAmount_isset = YES;
}

- (BOOL) fastPayAmountIsSet {
  return __fastPayAmount_isset;
}

- (void) unsetFastPayAmount {
  __fastPayAmount_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setMemberId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setReservationId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setHotelId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_LIST) {
          int _size25;
          [inProtocol readListBeginReturningElementType: NULL size: &_size25];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size25];
          int _i26;
          for (_i26 = 0; _i26 < _size25; ++_i26)
          {
            VoucherConsumption *_elem27 = [[VoucherConsumption alloc] init];
            [_elem27 read: inProtocol];
            [fieldValue addObject: _elem27];
            [_elem27 release_stub];
          }
          [inProtocol readListEnd];
          [self setVoucherConsumption: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_LIST) {
          int _size28;
          [inProtocol readListBeginReturningElementType: NULL size: &_size28];
          NSMutableArray * fieldValue = [[NSMutableArray alloc] initWithCapacity: _size28];
          int _i29;
          for (_i29 = 0; _i29 < _size28; ++_i29)
          {
            RefundCouponConsumption *_elem30 = [[RefundCouponConsumption alloc] init];
            [_elem30 read: inProtocol];
            [fieldValue addObject: _elem30];
            [_elem30 release_stub];
          }
          [inProtocol readListEnd];
          [self setRefundCouponConsumption: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setStoredValue: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_DOUBLE) {
          double fieldValue = [inProtocol readDouble];
          [self setFastPayAmount: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"PayRequest"];
  if (__memberId_isset) {
    [outProtocol writeFieldBeginWithName: @"memberId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __memberId];
    [outProtocol writeFieldEnd];
  }
  if (__reservationId_isset) {
    [outProtocol writeFieldBeginWithName: @"reservationId" type: TType_I64 fieldID: 2];
    [outProtocol writeI64: __reservationId];
    [outProtocol writeFieldEnd];
  }
  if (__hotelId_isset) {
    [outProtocol writeFieldBeginWithName: @"hotelId" type: TType_I32 fieldID: 7];
    [outProtocol writeI32: __hotelId];
    [outProtocol writeFieldEnd];
  }
  if (__voucherConsumption_isset) {
    if (__voucherConsumption != nil) {
      [outProtocol writeFieldBeginWithName: @"voucherConsumption" type: TType_LIST fieldID: 3];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__voucherConsumption count]];
        int i32;
        for (i32 = 0; i32 < [__voucherConsumption count]; i32++)
        {
          [[__voucherConsumption objectAtIndex: i32] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__refundCouponConsumption_isset) {
    if (__refundCouponConsumption != nil) {
      [outProtocol writeFieldBeginWithName: @"refundCouponConsumption" type: TType_LIST fieldID: 4];
      {
        [outProtocol writeListBeginWithElementType: TType_STRUCT size: [__refundCouponConsumption count]];
        int i34;
        for (i34 = 0; i34 < [__refundCouponConsumption count]; i34++)
        {
          [[__refundCouponConsumption objectAtIndex: i34] write: outProtocol];
        }
        [outProtocol writeListEnd];
      }
      [outProtocol writeFieldEnd];
    }
  }
  if (__storedValue_isset) {
    [outProtocol writeFieldBeginWithName: @"storedValue" type: TType_DOUBLE fieldID: 5];
    [outProtocol writeDouble: __storedValue];
    [outProtocol writeFieldEnd];
  }
  if (__fastPayAmount_isset) {
    [outProtocol writeFieldBeginWithName: @"fastPayAmount" type: TType_DOUBLE fieldID: 6];
    [outProtocol writeDouble: __fastPayAmount];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"PayRequest("];
  [ms appendString: @"memberId:"];
  [ms appendFormat: @"%qi", __memberId];
  [ms appendString: @",reservationId:"];
  [ms appendFormat: @"%qi", __reservationId];
  [ms appendString: @",hotelId:"];
  [ms appendFormat: @"%i", __hotelId];
  [ms appendString: @",voucherConsumption:"];
  [ms appendFormat: @"%@", __voucherConsumption];
  [ms appendString: @",refundCouponConsumption:"];
  [ms appendFormat: @"%@", __refundCouponConsumption];
  [ms appendString: @",storedValue:"];
  [ms appendFormat: @"%f", __storedValue];
  [ms appendString: @",fastPayAmount:"];
  [ms appendFormat: @"%f", __fastPayAmount];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation Payment

- (id) init
{
  self = [super init];
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"Payment"];
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"Payment("];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AssetRequest

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithMemberId: (int64_t) memberId cityId: (int32_t) cityId hotelId: (int32_t) hotelId roomId: (int32_t) roomId checkinTime: (int64_t) checkinTime checkoutTime: (int64_t) checkoutTime pageIndex: (int32_t) pageIndex pageSize: (int32_t) pageSize
{
  self = [super init];
  __memberId = memberId;
  __memberId_isset = YES;
  __cityId = cityId;
  __cityId_isset = YES;
  __hotelId = hotelId;
  __hotelId_isset = YES;
  __roomId = roomId;
  __roomId_isset = YES;
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
  __pageIndex = pageIndex;
  __pageIndex_isset = YES;
  __pageSize = pageSize;
  __pageSize_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"memberId"])
  {
    __memberId = [decoder decodeInt64ForKey: @"memberId"];
    __memberId_isset = YES;
  }
  if ([decoder containsValueForKey: @"cityId"])
  {
    __cityId = [decoder decodeInt32ForKey: @"cityId"];
    __cityId_isset = YES;
  }
  if ([decoder containsValueForKey: @"hotelId"])
  {
    __hotelId = [decoder decodeInt32ForKey: @"hotelId"];
    __hotelId_isset = YES;
  }
  if ([decoder containsValueForKey: @"roomId"])
  {
    __roomId = [decoder decodeInt32ForKey: @"roomId"];
    __roomId_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkinTime"])
  {
    __checkinTime = [decoder decodeInt64ForKey: @"checkinTime"];
    __checkinTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"checkoutTime"])
  {
    __checkoutTime = [decoder decodeInt64ForKey: @"checkoutTime"];
    __checkoutTime_isset = YES;
  }
  if ([decoder containsValueForKey: @"pageIndex"])
  {
    __pageIndex = [decoder decodeInt32ForKey: @"pageIndex"];
    __pageIndex_isset = YES;
  }
  if ([decoder containsValueForKey: @"pageSize"])
  {
    __pageSize = [decoder decodeInt32ForKey: @"pageSize"];
    __pageSize_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__memberId_isset)
  {
    [encoder encodeInt64: __memberId forKey: @"memberId"];
  }
  if (__cityId_isset)
  {
    [encoder encodeInt32: __cityId forKey: @"cityId"];
  }
  if (__hotelId_isset)
  {
    [encoder encodeInt32: __hotelId forKey: @"hotelId"];
  }
  if (__roomId_isset)
  {
    [encoder encodeInt32: __roomId forKey: @"roomId"];
  }
  if (__checkinTime_isset)
  {
    [encoder encodeInt64: __checkinTime forKey: @"checkinTime"];
  }
  if (__checkoutTime_isset)
  {
    [encoder encodeInt64: __checkoutTime forKey: @"checkoutTime"];
  }
  if (__pageIndex_isset)
  {
    [encoder encodeInt32: __pageIndex forKey: @"pageIndex"];
  }
  if (__pageSize_isset)
  {
    [encoder encodeInt32: __pageSize forKey: @"pageSize"];
  }
}

- (void) dealloc
{
  [super dealloc_stub];
}

- (int64_t) memberId {
  return __memberId;
}

- (void) setMemberId: (int64_t) memberId {
  __memberId = memberId;
  __memberId_isset = YES;
}

- (BOOL) memberIdIsSet {
  return __memberId_isset;
}

- (void) unsetMemberId {
  __memberId_isset = NO;
}

- (int32_t) cityId {
  return __cityId;
}

- (void) setCityId: (int32_t) cityId {
  __cityId = cityId;
  __cityId_isset = YES;
}

- (BOOL) cityIdIsSet {
  return __cityId_isset;
}

- (void) unsetCityId {
  __cityId_isset = NO;
}

- (int32_t) hotelId {
  return __hotelId;
}

- (void) setHotelId: (int32_t) hotelId {
  __hotelId = hotelId;
  __hotelId_isset = YES;
}

- (BOOL) hotelIdIsSet {
  return __hotelId_isset;
}

- (void) unsetHotelId {
  __hotelId_isset = NO;
}

- (int32_t) roomId {
  return __roomId;
}

- (void) setRoomId: (int32_t) roomId {
  __roomId = roomId;
  __roomId_isset = YES;
}

- (BOOL) roomIdIsSet {
  return __roomId_isset;
}

- (void) unsetRoomId {
  __roomId_isset = NO;
}

- (int64_t) checkinTime {
  return __checkinTime;
}

- (void) setCheckinTime: (int64_t) checkinTime {
  __checkinTime = checkinTime;
  __checkinTime_isset = YES;
}

- (BOOL) checkinTimeIsSet {
  return __checkinTime_isset;
}

- (void) unsetCheckinTime {
  __checkinTime_isset = NO;
}

- (int64_t) checkoutTime {
  return __checkoutTime;
}

- (void) setCheckoutTime: (int64_t) checkoutTime {
  __checkoutTime = checkoutTime;
  __checkoutTime_isset = YES;
}

- (BOOL) checkoutTimeIsSet {
  return __checkoutTime_isset;
}

- (void) unsetCheckoutTime {
  __checkoutTime_isset = NO;
}

- (int32_t) pageIndex {
  return __pageIndex;
}

- (void) setPageIndex: (int32_t) pageIndex {
  __pageIndex = pageIndex;
  __pageIndex_isset = YES;
}

- (BOOL) pageIndexIsSet {
  return __pageIndex_isset;
}

- (void) unsetPageIndex {
  __pageIndex_isset = NO;
}

- (int32_t) pageSize {
  return __pageSize;
}

- (void) setPageSize: (int32_t) pageSize {
  __pageSize = pageSize;
  __pageSize_isset = YES;
}

- (BOOL) pageSizeIsSet {
  return __pageSize_isset;
}

- (void) unsetPageSize {
  __pageSize_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setMemberId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setCityId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setHotelId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 4:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setRoomId: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 5:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckinTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 6:
        if (fieldType == TType_I64) {
          int64_t fieldValue = [inProtocol readI64];
          [self setCheckoutTime: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 7:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPageIndex: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 8:
        if (fieldType == TType_I32) {
          int32_t fieldValue = [inProtocol readI32];
          [self setPageSize: fieldValue];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"AssetRequest"];
  if (__memberId_isset) {
    [outProtocol writeFieldBeginWithName: @"memberId" type: TType_I64 fieldID: 1];
    [outProtocol writeI64: __memberId];
    [outProtocol writeFieldEnd];
  }
  if (__cityId_isset) {
    [outProtocol writeFieldBeginWithName: @"cityId" type: TType_I32 fieldID: 2];
    [outProtocol writeI32: __cityId];
    [outProtocol writeFieldEnd];
  }
  if (__hotelId_isset) {
    [outProtocol writeFieldBeginWithName: @"hotelId" type: TType_I32 fieldID: 3];
    [outProtocol writeI32: __hotelId];
    [outProtocol writeFieldEnd];
  }
  if (__roomId_isset) {
    [outProtocol writeFieldBeginWithName: @"roomId" type: TType_I32 fieldID: 4];
    [outProtocol writeI32: __roomId];
    [outProtocol writeFieldEnd];
  }
  if (__checkinTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkinTime" type: TType_I64 fieldID: 5];
    [outProtocol writeI64: __checkinTime];
    [outProtocol writeFieldEnd];
  }
  if (__checkoutTime_isset) {
    [outProtocol writeFieldBeginWithName: @"checkoutTime" type: TType_I64 fieldID: 6];
    [outProtocol writeI64: __checkoutTime];
    [outProtocol writeFieldEnd];
  }
  if (__pageIndex_isset) {
    [outProtocol writeFieldBeginWithName: @"pageIndex" type: TType_I32 fieldID: 7];
    [outProtocol writeI32: __pageIndex];
    [outProtocol writeFieldEnd];
  }
  if (__pageSize_isset) {
    [outProtocol writeFieldBeginWithName: @"pageSize" type: TType_I32 fieldID: 8];
    [outProtocol writeI32: __pageSize];
    [outProtocol writeFieldEnd];
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AssetRequest("];
  [ms appendString: @"memberId:"];
  [ms appendFormat: @"%qi", __memberId];
  [ms appendString: @",cityId:"];
  [ms appendFormat: @"%i", __cityId];
  [ms appendString: @",hotelId:"];
  [ms appendFormat: @"%i", __hotelId];
  [ms appendString: @",roomId:"];
  [ms appendFormat: @"%i", __roomId];
  [ms appendString: @",checkinTime:"];
  [ms appendFormat: @"%qi", __checkinTime];
  [ms appendString: @",checkoutTime:"];
  [ms appendFormat: @"%qi", __checkoutTime];
  [ms appendString: @",pageIndex:"];
  [ms appendFormat: @"%i", __pageIndex];
  [ms appendString: @",pageSize:"];
  [ms appendFormat: @"%i", __pageSize];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


@implementation TBookingConstants
+ (void) initialize {
}
@end

